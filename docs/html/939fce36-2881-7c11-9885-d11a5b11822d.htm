<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Animal Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Animal class" /><meta name="System.Keywords" content="Terrarium.Sdk.Classes.Creature.Animal class" /><meta name="System.Keywords" content="Animal class, about Animal class" /><meta name="Microsoft.Help.F1" content="Terrarium.Sdk.Classes.Creature.Animal" /><meta name="Microsoft.Help.Id" content="T:Terrarium.Sdk.Classes.Creature.Animal" /><meta name="Description" content="This is the class that you derive from when you create an animal." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Terrarium.Sdk.Classes.Creature" /><meta name="file" content="939fce36-2881-7c11-9885-d11a5b11822d" /><meta name="guid" content="939fce36-2881-7c11-9885-d11a5b11822d" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Terrarium SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="d75eb659-6335-53f6-af7a-81814a21ab7f.htm" title="Terrarium SDK" tocid="roottoc">Terrarium SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="d75eb659-6335-53f6-af7a-81814a21ab7f.htm" title="Namespaces" tocid="d75eb659-6335-53f6-af7a-81814a21ab7f">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="ffc2543c-304f-fd68-c94c-61a3deafb6a1.htm" title="Terrarium.Sdk.Classes.Creature" tocid="ffc2543c-304f-fd68-c94c-61a3deafb6a1">Terrarium.Sdk.Classes.Creature</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="939fce36-2881-7c11-9885-d11a5b11822d.htm" title="Animal Class" tocid="939fce36-2881-7c11-9885-d11a5b11822d">Animal Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="ae347967-0a91-5032-1a95-d7e02a5f7a96.htm" title="Animal Constructor " tocid="ae347967-0a91-5032-1a95-d7e02a5f7a96">Animal Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="bd7e09e4-a3a5-9632-bbc8-f9e0737c27ad.htm" title="Animal Methods" tocid="bd7e09e4-a3a5-9632-bbc8-f9e0737c27ad">Animal Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="66746c4e-dd22-5057-82e3-7480bd65985b.htm" title="Animal Properties" tocid="66746c4e-dd22-5057-82e3-7480bd65985b">Animal Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="f30643ad-05f9-3309-ccde-de3169a09e2f.htm" title="Animal Events" tocid="f30643ad-05f9-3309-ccde-de3169a09e2f">Animal Events</a></div></div></div><div id="TocResize" class="tocResize" onmousedown="OnMouseDown(event);"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Animal Class</td></tr></table><span class="introStyle"></span><div class="summary">
             This is the class that you derive from when you create an animal.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LSTD44AE6B2_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD44AE6B2_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Terrarium.Sdk.Classes.Creature<span id="LSTD44AE6B2_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD44AE6B2_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Organism</a><br />    <span class="selflink">Terrarium.Sdk.Classes.Creature<span id="LSTD44AE6B2_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD44AE6B2_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Animal</span><br /></div><p> </p><strong>Namespace:</strong> <a href="ffc2543c-304f-fd68-c94c-61a3deafb6a1.htm">Terrarium.Sdk.Classes.Creature</a><br /><strong>Assembly:</strong> Terrarium.Sdk (in Terrarium.Sdk.dll) Version: 1.1.0.0 (1.1.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cs','1','4');return false;">C#</a></div><div id="ID1EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','vb','2','4');return false;">VB</a></div><div id="ID1EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cpp','3','4');return false;">C++</a></div><div id="ID1EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EDCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">Animal</span> : <span class="identifier">Organism</span></pre></div><div id="ID1EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">MustInherit</span> <span class="keyword">Class</span> <span class="identifier">Animal</span>
	<span class="keyword">Inherits</span> <span class="identifier">Organism</span></pre></div><div id="ID1EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">Animal</span> <span class="keyword">abstract</span> : <span class="keyword">public</span> <span class="identifier">Organism</span></pre></div><div id="ID1EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[&lt;<span class="identifier">AbstractClassAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">Animal</span> =  
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">Organism</span>
    <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EDCA");</script></div><p>The <span class="selflink">Animal</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="ae347967-0a91-5032-1a95-d7e02a5f7a96.htm">Animal</a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">Animal</span> class</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f6bf9cc0-ae1e-37cf-f894-cd4cc8702770.htm">BeginAttacking</a></td><td><div class="summary"><p>
              Method used to command your creature to start attacking another
              creature.  You can only attack one creature per round, and a single
              call to BeginAttacking will only attack a target creature in the
              upcoming tick.  Calling BeginAttacking multiple times in the same
              turn will only result in your creature attacking the target specified
              in the last call to BeginAttacking.
             </p><p>
              Attacking is asynchronous so you'll need to handle the AttackCompleted
              event in order to get the status of your attack.  A single attack might
              not kill a target enemy so you should detect if the enemy is still
              alive and call BeginAttacking once per round until the target creature
              is either dead or has escaped.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="8a8dc0c4-3046-b91e-6acb-b82cdce51e67.htm">BeginDefending</a></td><td><div class="summary"><p>
              Method used to command a creature to begin defending against a specific
              target creature.  You can only defend against one creature at a time,
              so only the final call to BeginDefending will actually be used 
              in the upcoming turn.
             </p><p>
              Once your creature has finished defending, the DefendCompleted event will
              be fired and your event handler will be called if you provided one.  You
              can use this event to determine the results of your defense.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a962e557-076f-0a95-afd3-669475bd30c8.htm">BeginEating</a></td><td><div class="summary"><p>
              Method used to command your creature to start eating another creature.
              You can only eat one target creature per round, and a single call to
              BeginEating will only attack a target creature in the upcoming tick.
              Calling BeginEating multiple times in the same turn will only result
              in your creature eating the target specified in the last call to
              BeginEating.
             </p><p>
              Eating is asynchronous so you'll need to handle the EatCompleted event
              in order to get the status of the bite.  A single bite might not
              produce enough energy for your creature so you'll have to make multiple
              bites against the same target until it is completed eaten.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="11169b7f-5132-7bb1-9f2d-f4ecc77bded9.htm">BeginMoving</a></td><td><div class="summary"><p>
              Method used to command a creature to begin moving towards a specific location
              at a specific speed.  The actual movement operation may take several turns,
              but is always initiated using this method.  Your movement location should
              be within the world boundary and your movement speed should be less than or
              equal to your creature's Species.MaximumSpeed.
             </p><p>
              Once called the creature will begin moving towards the specified point.  This
              movement will continue until you issue a different BeginMoving command to your
              creature, it reaches its destination, or becomes blocked by something.  Any
              calls to BeginMoving will clear out any previous calls, so care should be taken
              when issuing multi-part path movements.
             </p><p>
              Once the movement is completed the MoveCompleted event will be fired and your
              event handler for this function will be called if you've provided one.  The
              event handler will provide full information about the results of an attempted
              movement operation.
             </p></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="df1c88ca-4800-b153-2f45-387e10752afa.htm">BeginReproduction</a></td><td><div class="summary"><p>
              Use this function to command your creature to reproduce.  There are many
              conditions on whether your creature can reproduce.  If these conditions
              are not met, an exception will be thrown.  The easiest way to make
              sure all pre-existing conditions have been met is to check the CanReproduce
              property.
             </p><p>
              If you call this method multiple times in the same turn, then the last call
              will be used, and all previous calls will be ignored.  This method is also
              asynchronous, and a ReproduceCompletedEvent will be fired when your creature
              has actually given birth.  The time between start and completion is 10 ticks.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="528d3d57-b20b-9dbe-9878-8d652d1f1880.htm">CanAttack</a></td><td><div class="summary"><p>
              Used to determine if your creature can attack another creature.
              This will return true all the time for a Carnivore since they
              can always attack.  
             </p><p>
              For Herbivores this will return true if they are hungry enough
              to be aggressive.  Herbivores may also attack a creature in
              the upcoming round if that creature attacked them in the
              previous round.  The best place to attack a creature that is
              attacking you is to handle the Attacked event.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="377835c1-64df-56a5-1ccf-6b3dd2e83158.htm">DeserializeAnimal</a></td><td><div class="summary"><p>
              This method should be overridden by any class inheriting from 
              Animal.  This method is called with a MemoryStream that the
              user can read any data from that was written during the
              call to SerializeAnimal.
             </p><p>
              Care should be taken when reading from a MemoryStream since
              the values may have been truncated at 8000bytes if more than
              8000bytes were originally written.
             </p></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="eec34a65-5a3d-9fb1-5b31-1d880da34598.htm">DistanceTo</a></td><td><div class="summary"><p>
              Calculates the linear distance between your creature and another using
              various API's defined by the Vector class.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/bsc2ak47" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a> is equal to the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/4k87zsw7" target="_blank">Finalize</a></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/zdee4b3y" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as a hash function for a particular type. </div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="76a5c296-889c-eb9a-a62a-0b11d11ee1cf.htm">GetThenErasePendingActions</a></td><td> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/dfwy45w9" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="http://msdn2.microsoft.com/en-us/library/42892f65" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="dcb91725-bb21-953c-39a9-ccba0237ec4e.htm">Initialize</a></td><td><div class="summary">
            The Initialize method is called immediately after instantiating a new creature.
            The developer should override this method to set up event handlers for the
            creature and do any first time initialization that needs to be done to set
            up member variables.
            </div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="a1fc5e5a-38ab-6c13-7a67-ae48f8056055.htm">InternalAnimalDeserialize</a></td><td><div class="summary">
             Implemented by the Animal class in order to allow
             deserialization of any private members required for the
             class to operate properly after deserialization.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e366ca08-2bcc-f4bd-2bb7-5ab441f110f3.htm">InternalAnimalSerialize</a></td><td><div class="summary">
             Implemented by the Animal class in order to allow
             serialization of any private members required for the
             class to operate properly after deserialization.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e344332e-c101-4d5e-32c1-5d70b54700ac.htm">InternalMain</a></td><td><div class="summary">
             Provides all of the per tick processing for an Animal.  This method
             fires all of the events that make a creature tick.  Some events
             are fired every tick, while other events are only fired whenever
             certain actions complete.  This method can be called in order to
             process Animal code without processing the developer code in the
             instance they are being skipped for using too much time.
            </div> (Overrides <a href="541736c3-8ef0-eefb-bb2a-924d977ffd70.htm">Organism<span id="LSTD44AE6B2_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD44AE6B2_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>InternalMain(Boolean)</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f603fc7b-3468-ead6-de11-b008781879b4.htm">InternalOrganismDeserialize</a></td><td> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="fed6dfcd-34d5-405d-c941-28512489c187.htm">InternalOrganismSerialize</a></td><td> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="c8f402fb-48c0-2cb9-e390-cce8aad08d3a.htm">IsMySpecies</a></td><td><div class="summary"><p>
              Allows a creature to determine if the OrganismState of another creature
              represents the same species.  This can be used to determine whether you
              should attack/defend against another creature.
             </p><p>
              Creatures of the same species often don't fight one another, defend against
              one another, and kill one another.  They often help their own species in
              fights against other species.  Carnivores of the same species may sacrifice
              themselves as food once they become too old to members of their species.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d411bb84-18da-27b2-650e-2bbf1b044726.htm">LookFor</a></td><td><div class="summary"><p>
              Tries to return an updated OrganismState given a creature's state OrganismState.
              This function may return null if the creature can't be found or was hidden by
              camouflage.  You may call this method multiple times and get different results.
             </p></div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/57ctke0a" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="0f330bcc-2dfa-70a9-9ee1-a9df2bc39cf8.htm">RefreshState</a></td><td><div class="summary"><p>
              Tries to return an updated OrganismState given a creature's ID.  This function
              may return null if the creature can't be found or was hidden by camouflage.
              You may call this method multiple times just like the LookFor method and get
              different results.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="b198eeff-609c-2552-669d-44c1b2cc7076.htm">Scan</a></td><td><div class="summary"><p>
              Scans the world around your creature's current location in a circular
              area and returns an ArrayList of OrganismState objects representing
              what was seen.
             </p><p>
              The radius scanned by your creature is dependent upon the number of points
              placed into the EyesightPoints attribute.  Animals may also hide within your
              radius by using camouflage.  This means that more points placed into the
              EyesightPoints attribute will yield a better vision of hidden creatures.
             </p><p>
              Because of camouflage and the random aspect of hiding vs. being seen by another
              creature, multiple calls to Scan might returns different results.  However,
              each call to Scan also takes additional time from your creature's total timeslice.
             </p><p>
              It is recommended that you hold onto the OrganismState objects, determine your
              target creature, and then use the LookFor method to update the state rather than
              calling the Scan method again.  The LookFor method also takes into account camouflage
              and may not work the first time, but is much less expensive timewise than Scan.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="e8ca1870-325d-390c-dda3-9fff9195e61f.htm">SerializeAnimal</a></td><td><div class="summary"><p>
              This method should be overridden by any class inheriting from 
              Animal.  This method is called with a MemoryStream that the
              user can place any data on they wish to Serialize during
              save games or while being teleported.
             </p><p>
              The complement of this method is the DeserializeAnimal method
              which is called to deserialize the data when the creature
              is restored.  Authors should be careful when writing to a
              MemoryStream since it will be truncated at 8000bytes.
             </p></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="fd919427-5192-9c4d-3c78-9312393ded59.htm">SetWorldBoundary</a></td><td> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="52c571bb-0b49-f411-feca-d59ae0df13e2.htm">StopMoving</a></td><td><div class="summary"><p>
              Clears any pending movement operations your creature might be performing.
             </p></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="http://msdn2.microsoft.com/en-us/library/7bxwbwt2" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="382a72b0-0182-8d45-60e2-f13f5bd9a055.htm">WithinAttackingRange</a></td><td><div class="summary"><p>
              Used to determine if your creature is within range to attack another
              target creature.
             </p><p>
              This method does not attempt to validate the position of the
              organismState with respect to the current world state.  If you
              pass a stale object in then you may get stale results.  Make sure
              you use the LookFor method to get the most up-to-date results.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="eb55e3b3-ecaa-7b1e-0cfc-028db7300528.htm">WithinEatingRange</a></td><td><div class="summary"><p>
              Used to determine if your creature is within range to eat another
              target creature.
             </p><p>
              This method does not attempt to validate the position of the
              organismState with respect to the current world state.  If you
              pass a stale object in then you may get stale results.  Make sure
              you use the LookFor method to get the most up-to-date results.
             </p></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="f48bf8e8-eb49-c8da-d3ee-4969324e3d81.htm">WriteTrace(Object)</a></td><td><div class="summary"><p>
              Writes a trace to the Terrarium trace window for debugging.  The Tracing routines
              take a *very* small amount of time if you're not monitoring them.  They are on the
              order of 12 nSec per call.  To meet this performance requirement there are several
              overloads taking a varying number of parameters rather than a single variable argument
              parameter.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="ba845fc2-73d0-739c-edd2-091d83d5d9bb.htm">WriteTrace(Object, Object)</a></td><td><div class="summary"><p>
              Writes a trace to the Terrarium trace window for debugging.  The Tracing routines
              take a *very* small amount of time if you're not monitoring them.  They are on the
              order of 12 nSec per call.  To meet this performance requirement there are several
              overloads taking a varying number of parameters rather than a single variable argument
              parameter.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="d81ab429-28f1-5937-aed1-298a8b7b02e2.htm">WriteTrace(Object, Object, Object)</a></td><td><div class="summary"><p>
              Writes a trace to the Terrarium trace window for debugging.  The Tracing routines
              take a *very* small amount of time if you're not monitoring them.  They are on the
              order of 12 nSec per call.  To meet this performance requirement there are several
              overloads taking a varying number of parameters rather than a single variable argument
              parameter.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="578fae56-6542-0adb-05fe-9580cbac8920.htm">WriteTrace(Object, Object, Object, Object)</a></td><td><div class="summary"><p>
              Writes a trace to the Terrarium trace window for debugging.  The Tracing routines
              take a *very* small amount of time if you're not monitoring them.  They are on the
              order of 12 nSec per call.  To meet this performance requirement there are several
              overloads taking a varying number of parameters rather than a single variable argument
              parameter.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID5RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="92f8ca56-d8c3-f4a8-5034-a2789a7e6e88.htm">Antennas</a></td><td><div class="summary"><p>
              Provides access to the creature's Antenna.  Each Antenna has a specific set of
              positions that it may be in.  Setting states with this information is possible
              as is passing numeric data.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="933f94b4-f32f-ef63-322d-12c2edd26414.htm">CanEat</a></td><td><div class="summary"><p>
              Used to determine if your creature is capable of eating depending
              on the creature's current energy state.  You can also trap the
              AlreadyFullException from BeginEating.
             </p></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="a298cd45-2ae6-bf90-2092-da71a58ffbd0.htm">CanReproduce</a></td><td><div class="summary"><p>
              Determines whether all conditions are met for your organism to be able to reproduce.
              These conditions include various state information like whether your creature is
              mature, has enough energy, and is not already reproducing.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="e73446fb-4293-2ced-4bd9-ab97a4041918.htm">CurrentAttackAction</a></td><td><div class="summary"><p>
              After your creature has begun attacking you can get the AttackAction object that
              represents your creature's current attack action.  You can use this to examine
              the target creature you're attacking and determine if there might be a
              more appropriate enemy.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6bf4cd59-b6de-0dc5-729e-df09acb9916f.htm">CurrentDefendAction</a></td><td><div class="summary"><p>
              After your creature has begun defending you can get the DefendAction object that
              represents you're creatures current defend action.  You can use this to examine
              the target creature you're defending against and determine if there might be a
              more appropriate enemy.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="040dfe40-8fd6-f7af-0e12-0e7808908a83.htm">CurrentEatAction</a></td><td><div class="summary"><p>
              After your creature has begun eating you can get the EatAction object that
              represents you're creatures current eat action.  You can use this to examine
              the target creature your eating and determine if their might be a better
              target to eat.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="8f1bc9de-b91b-25d2-fc79-547153d7ac92.htm">CurrentMoveToAction</a></td><td><div class="summary"><p>
              After your creature has begun moving you can get the MoveToAction object that
              represents your creature's current movement action.  You can use this to examine
              the movement location and speed that your creature moving to see if you'll need
              to alter your course.
             </p></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6450f272-19f6-5d17-ed69-b38722448e08.htm">CurrentReproduceAction</a></td><td><div class="summary"><p>
              After your creature has begun reproduction you can get the ReproduceAction object that
              represents your creature's current reproduction.  You can use this to examine
              the dna byte array that will be passed to the child.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="7fc3fdf2-9bc4-ebf7-3bf5-d45972c34f6c.htm">ID</a></td><td><div class="summary"><p>
              The unique GUID for an organism.  This is used to store plant/animal state
              when being saved to disk, or when passing plant/animal information to children
              during reproduction.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="a7544cfe-4fb3-41a1-2a9f-89015729b65d.htm">IsAttacking</a></td><td><div class="summary"><p>
              Used to determine if your creature has been commanded to attack.
              You can also check the CurrentAttackAction property to get
              the actual target creature you're attacking.  Because attacking
              is asynchronous your creature won't attack until the upcoming tick.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="7a2384cc-fe5b-d19b-24db-d03073e209e5.htm">IsDefending</a></td><td><div class="summary"><p>
              Used to determine if your creature has been commanded to defend.
              You can also check the CurrentDefendAction property to get
              the actual target creature you're defending against.  Because defending
              is asynchronous your creature won't defend until the upcoming tick.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="75faec5f-0864-442f-5385-169485112408.htm">IsEating</a></td><td><div class="summary"><p>
              Used to determine if your creature has been commanded to eat.
              You can also check the CurrentEatAction property to get
              the actual target creature you're eating.  Because eating
              is asynchronous your creature won't actually eat until the upcoming tick.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="0055ffa2-740b-1b15-6d9c-ec92675becdc.htm">IsMoving</a></td><td><div class="summary"><p>
              Used to determine if your creature has been commanded to move.
              You can also check the CurrentMoveToAction property to get
              the actual movement vector for your creature.  Because moving
              is asynchronous your creature might not have started moving
              yet.
             </p></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6cdcc9c1-fb5f-962a-c72e-a9a2709b87bb.htm">IsReproducing</a></td><td><div class="summary"><p>
              Determines if your organism is currently in the process of reproducing.  Because
              reproducing is an asynchronous action, the organism may not actually be giving
              birth yet.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="de19e9e6-b3bf-bf34-5ebe-d0d653e28655.htm">OrganismRandom</a></td><td><div class="summary"><p>
              To make random actions deterministic the creature should use this Random
              object when in need of a random number or variable in the creature's code.
              This can help aid in debugging so that strange behavior can be reproduced.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="b313a037-1c21-8d23-cd38-76e4911c5718.htm">Position</a></td><td><div class="summary"><p>
              Each creature is centered in the game world to a specific point.  The
              Position property can be used to query for this location.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="fbb69d36-5093-aa61-7fa9-72a61b908a62.htm">SerializedStream</a></td><td> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="93703811-a11c-2278-83d3-0b626874ec43.htm">Species</a></td><td><div class="summary">
             Returns the immutable species object containing information about
             your creature's species related information.  This includes how
             many points were placed into creature attributes and other values
             calculated from those points allocations.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="f12d9cff-8dbf-e116-1a27-14e9a16eccb3.htm">State</a></td><td><div class="summary">
             The current state of your own creature.  This is used to get the latest
             information about your creature's health, damage, and other stats available
             on the AnimalState object.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="2be66080-2062-02dd-3d38-b79316ad4f4d.htm">Trace</a></td><td> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="8b644579-01b3-eb6f-6476-760669e84ed7.htm">TurnsSkipped</a></td><td><div class="summary"><p>
              A creature can get skipped for a number of turns if it takes too long to execute.
              There is a limit to the time an animal can use for processing every turn which is
              calculated dynamically by the Terrarium each time it starts based on your computer's
              processing power.
             </p><p>
              To see how long your creature takes to process, you can open the
              Trace window, unselect "Show Organism Traces", and then select your creature.  Note
              that this time will be different depending on the machine.
             </p><p>
              If you do break the limit Terrarium determines how many ticks worth of time you've gone
              over the limit and sets this property.  You can examine this property to recover from
              conditions where your creature is skipped for a given number of turns.  This is useful
              since you may not receive events that fire while during the time your creature's turn
              is being skipped.
             </p></div> (Inherited from <a href="c9024f66-ae7b-03ce-ca71-c4ee70d31eb8.htm">Organism</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="6d3d5d35-6aad-84e9-2d38-2128ee8f03be.htm">WorldHeight</a></td><td><div class="summary"><p>
              The height of the world in single points/pixels.  Use this to make sure
              you don't try to move outside of the bounds of the Terrarium and to
              help manage your creature's population size/density.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="a7c346d9-6c82-ed8d-29c2-9ce5127fdd99.htm">WorldWidth</a></td><td><div class="summary"><p>
              The width of the world in single points/pixels.  Use this to make sure
              you don't try to move outside of the bounds of the Terrarium and to
              help manage your creature's population size/density.
             </p></div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Events</span></div><div id="ID6RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="87bfbd37-e3bc-5bda-e427-7a77a444b1c4.htm">AttackCompleted</a></td><td><div class="summary"><p>
              The AttackCompleted event is fired whenever your creature
              has completed an attack operation.  Your creature should
              hook this event to learn the results of the battle such
              as how much damage was inflicted and whether the target
              creature was killed.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="617578cd-7213-7c6c-c622-2cf51806b193.htm">Attacked</a></td><td><div class="summary">Fired when an organism is being attacked by another organism.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="21284157-175e-d088-66fd-5e1b2f97376f.htm">Born</a></td><td><div class="summary">Fired on an organism when it is first born.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="94c3f18c-5145-a818-ef9e-f7142da7dc2c.htm">DefendCompleted</a></td><td><div class="summary">Fired when a DefendAction is completed.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="3d2cf398-a59f-6b7c-095d-82e29475e468.htm">EatCompleted</a></td><td><div class="summary">Fired when an EatAction is completed.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="d2683ace-71bd-e37f-01ca-4b56aef1c82d.htm">Idle</a></td><td><div class="summary">Fired after all other events have been fired.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="94f7308c-64b0-5529-aa96-31fce3e3217c.htm">Load</a></td><td><div class="summary">Fired before all other events have been fired.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="22fbf39e-3545-5e9b-5eff-453bf69f2c6a.htm">MoveCompleted</a></td><td><div class="summary"><p>
              The MoveCompleted event is fired whenever your creature
              has completed a movement operation.  This can either mean
              the creature reached the destination or that the creature
              was blocked and can't move anymore.
             </p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="8008a3fb-1b62-2ef3-273f-a7b0db61654c.htm">ReproduceCompleted</a></td><td><div class="summary">Fired on the parent when a ReproduceAction is completed.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="003d9f2e-de2f-4b87-6c45-7dfa169c5fcd.htm">Teleported</a></td><td><div class="summary">Fired after an organism has been teleported.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="ffc2543c-304f-fd68-c94c-61a3deafb6a1.htm">Terrarium.Sdk.Classes.Creature Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>